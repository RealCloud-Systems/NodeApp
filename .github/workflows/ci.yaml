name: CI
on:
  push:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend]  # Define a matriz com os serviÃ§os
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: build and push image
        id: build_image
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: leandromarinh/${{ matrix.service }}
          tags: ${{ github.sha }}, latest
          path: ./${{ matrix.service }}

      - name: set environment variables
        run: |
          echo "IMAGE=leandromarinh/${{ matrix.service }}:${{ github.sha }}" >> $GITHUB_ENV
          echo "IMAGE_SHA=$(docker images --no-trunc --quiet leandromarinh/${{ matrix.service }}:${{ github.sha }})" >> $GITHUB_ENV

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        service: [frontend, backend]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: 4.5.7

      - name: update k8s
        run: |
          cd k8s
          kustomize edit set image ${{ matrix.service }}=${{ env.IMAGE }}
          cat kustomization.yaml

      - name: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Deploy Action"
          git commit -am "image update done by kustomization"

      - name: push
        uses: ad-m/github-push-action@master

      - name: call Upwind API
        env:
          UPWIND_API_ENDPOINT: ${{ secrets.UPWIND_API_ENDPOINT }}
          UPWIND_AUTH_ENDPOINT: ${{ secrets.UPWIND_AUTH_ENDPOINT }}
          UPWIND_CLIENT_ID: ${{ secrets.UPWIND_CLIENT_ID }}
          UPWIND_CLIENT_SECRET: ${{ secrets.UPWIND_CLIENT_SECRET }}
          UPWIND_ORGANIZATION_ID: ${{ secrets.UPWIND_ORGANIZATION_ID }}
          IMAGE: ${{ env.IMAGE }}
          IMAGE_SHA: ${{ env.IMAGE_SHA }}
        run: |
          # Get Access Token
          response=$(curl -s --location "${UPWIND_AUTH_ENDPOINT}/oauth/token" \
            --header "Content-Type: application/x-www-form-urlencoded" \
            --data-urlencode "grant_type=client_credentials" \
            --data-urlencode "audience=${UPWIND_API_ENDPOINT}" \
            --data-urlencode "client_id=${UPWIND_CLIENT_ID}" \
            --data-urlencode "client_secret=${UPWIND_CLIENT_SECRET}")
          ACCESS_TOKEN=$(echo "$response" | jq -r '.access_token')

          # Call Upwind API
          curl -fsSL "${UPWIND_API_ENDPOINT}/v1/organizations/$UPWIND_ORGANIZATION_ID/events" \
            --request POST \
            --write-out "\n%{http_code}" \
            --header "Content-Type: application/json" \
            --header "Authorization: Bearer $ACCESS_TOKEN" \
            --data '{
              "type": "image_build",
              "reporter": "github_actions",
              "data": {
                "image": "'"${IMAGE}"'",
                "commit_sha": "'"${GITHUB_SHA}"'",
                "repository": "https://github.com/'"${GITHUB_REPOSITORY}"'.git",
                "branch": "'"${GITHUB_REF_NAME}"'",
                "image_sha": "'"${IMAGE_SHA}"'",
                "build_time": "'"$(date +'%Y-%m-%dT%H:%M:%SZ')"'" 
              }
            }'

